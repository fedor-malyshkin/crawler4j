apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = 'ru.nlp_project.story_line2'
def groupId = group
version = '4.4.1-SNAPSHOT'
//name = 'crawler4j'
def artifactId = name

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		maven {
			credentials {
				username "deployment"
				password "deployment"
			}
			if(project.version.endsWith('-SNAPSHOT')) {
				url "http://repo.nlp-project.ru:8082/nexus/content/repositories/snapshots/"
			}  else {
				url "http://repo.nlp-project.ru:8082/nexus/content/repositories/releases/"
			}
		}
	}
}


repositories {
	mavenCentral()
	mavenLocal()
	maven {
		name "local-snapshots"
		url  "http://repo.nlp-project.ru:8082/nexus/content/repositories/snapshots/"
	}
	maven {
		name "local-releases"
		url  "http://repo.nlp-project.ru:8082/nexus/content/repositories/releases/"
	}
	maven {
		name "remote-snapshots"
		url  "http://repo.nlp-project.ru:8082/nexus/content/repositories/snapshots/"
	}
	maven {
		name "remote-releases"
		url  "http://repo.nlp-project.ru:8082/nexus/content/repositories/releases/"
	}

	maven { url "http://download.oracle.com/maven" }
}

// repositories {
//      maven { url "http://download.oracle.com/maven" }
//      maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
//      maven { url "http://repo.maven.apache.org/maven2" }
// }
dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.22'
    compile group: 'com.google.guava', name: 'guava', version:'21.0'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.3'
    compile group: 'com.sleepycat', name: 'je', version:'5.0.84'
    compile group: 'org.apache.tika', name: 'tika-parsers', version:'1.14'
    runtime group: 'ch.qos.logback', name: 'logback-classic', version:'1.1.7'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'com.github.tomakehurst', name: 'wiremock', version:'2.4.1'
    testCompile group: 'org.codehaus.groovy', name: 'groovy-all', version:'2.4.7'
    testCompile group: 'org.spockframework', name: 'spock-core', version:'1.0-groovy-2.4'
}


task gitByTagVersion(type:Exec)  {
	// def props = loadProjectProperties(prj)
	description "Create tag in local git by version in file"
	workingDir projectDir
	//on linux
	commandLine "git",  "tag", "${version}", "--message=Gradle Release at ${new Date()}"
}

// execute only in execution phase
gitByTagVersion.doFirst {
	if(version.endsWith('-SNAPSHOT')) {
		def msg = "Cannot create release with version: ${prj.version} (need set stable version in properties file)"
		logger.error(msg)
		throw new IllegalStateException(msg)
	}
}

task gitPush(type:Exec) {
	description "Push tag in remote storage"
	workingDir projectDir
	//on linux
	commandLine "git",  "push" , "origin", "--tags"
}

publishToMavenLocal.dependsOn build
task deployLocal (dependsOn: publishToMavenLocal) {
	description "Install in local repo"
}

task deploy (dependsOn: publish) {
	description "Install in remote repo"
}

gitByTagVersion.dependsOn build
gitPush.dependsOn gitByTagVersion

task release (dependsOn: [gitPush, publish]) {
	//need to run "git config credential.helper store" in git project's directory
	description "Make release of module (assign tag, push tag to git, publish)"
}
